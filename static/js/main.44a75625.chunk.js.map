{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","cardsArray","map","user","i","SearchBox","searchChange","onChange","type","placeholder","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchField","target","value","console","log","state","fetch","then","response","json","users","this","filteredRobots","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAUeA,EATH,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,KAAKC,EAAU,EAAVA,MAClB,OACE,sBAAKC,UAAU,gDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,UACpD,6BAAKJ,IACL,4BAAIC,QCOCI,EAXC,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACRC,EAAWD,EAAOE,KAAI,SAACC,EAAMC,GAC/B,OAAO,cAAC,EAAD,CAAcX,GAAIO,EAAOI,GAAGX,GAAIC,KAAMM,EAAOI,GAAGV,KAAMC,MAAOK,EAAOI,GAAGT,OAA5DS,MAGtB,OACI,8BACKH,KCDEI,EAPC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aACd,OACI,qBAAKV,UAAU,MAAf,SACI,uBAAOW,SAAUD,EAAcV,UAAU,mCAAmCY,KAAK,SAASC,YAAY,qBCInGC,EAPA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAASC,OAAQ,kBAAmBC,OAAO,SAAnE,SACKJ,EAAMK,YC2CJC,G,wDAzCX,aAAc,IAAD,8BACT,gBAWJC,eAAe,SAACC,GACZ,EAAKC,SAAU,CAACC,YAAaF,EAAMG,OAAOC,QAC1CC,QAAQC,IAAI,QAASN,EAAMG,OAAOC,QAZlC,EAAKG,MAAM,CACP1B,OAAO,GACPqB,YAAY,IAJP,E,qDAOb,WAAoB,IAAD,OACfM,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UAAQF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACpB,OAAQ+B,S,oBAO3E,WACI,MAA8BC,KAAKN,MAA3B1B,EAAR,EAAQA,OAAQqB,EAAhB,EAAgBA,YACVY,EAAgBjC,EAAOkC,QAAO,SAAAlC,GAChC,OAAOA,EAAON,KAAKyC,cAAcC,SAASf,EAAYc,kBAEtD,OAAQF,EAAeI,OASnB,sBAAKzC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWU,aAAc0B,KAAKd,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUlB,OAAQiC,SAZ9B,sBAAKrC,UAAU,KAAf,UACQ,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWU,aAAc0B,KAAKd,iBAC9B,cAAC,EAAD,UACI,kD,GA3BNoB,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.44a75625.chunk.js","sourcesContent":["import React from 'react';\r\nconst Card= ({id,name,email}) =>{\r\n    return(\r\n      <div className=\"tc bg-white br3 pa3 ma3 dib bw3 shadow-5 grow\" >\r\n          <img src={`https://robohash.org/${id}?200x200`} alt=\"robot\"/>\r\n          <h2>{name}</h2>\r\n          <p>{email}</p>\r\n      </div>\r\n    );\r\n}\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\"; \r\nconst CardList= ({robots})=> {\r\n    const cardsArray=robots.map((user, i)=> {\r\n        return(<Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />) \r\n    })\r\n    \r\n    return(\r\n        <div>\r\n            {cardsArray}\r\n        </div>\r\n    )\r\n}\r\nexport default CardList;","import React from \"react\";\r\nconst SearchBox=({searchChange})=>{\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input onChange={searchChange} className=\"pa3 ba b--green bg-lightest-blue\" type=\"search\" placeholder=\"Search Robots\" />\r\n        </div>\r\n    )\r\n}\r\nexport default SearchBox;","import React from \"react\";\r\nconst Scroll = (props) =>{\r\n    return(\r\n        <div style={{overflowY: 'scroll',border: '5px solid black', height:'800px'}} >\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default Scroll;  ","import React, {Component} from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport \"./App.css\";\r\nclass App extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            robots:[],\r\n            searchField:\"\"\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then(response=> response.json()).then(users=>  this.setState({robots: users}))\r\n    }\r\n    \r\n    onSearchChange=(event)=>{\r\n        this.setState( {searchField: event.target.value})\r\n        console.log(\"event\", event.target.value);\r\n    }\r\n    render(){\r\n        const { robots, searchField}= this.state;\r\n        const filteredRobots= robots.filter(robots=>{\r\n            return robots.name.toLowerCase().includes(searchField.toLowerCase())})\r\n        \r\n            return !filteredRobots.length ?\r\n            <div className=\"tc\">\r\n                    <h1 className=\"f2\" >Robo Friends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <h1>Loading</h1>\r\n                    </Scroll>\r\n                </div>:\r\n            (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f2\" >Robo Friends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <CardList robots={filteredRobots}/>\r\n                    </Scroll>\r\n                </div>\r\n            )\r\n        \r\n    } \r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from \"./containers/App\";\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"tachyons\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}